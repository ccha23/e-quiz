# Abolute paths to: 
#   - template directory
template_dir:= $(CURDIR)/template
#   - distribution directory
dist_dir := $(CURDIR)/dist
#   - configuration file
config_file := $(CURDIR)/config.yaml.j2
tag := latest

# Helm upgrade/install equiz.
# NOTE: 
#   - The command rerun `make config` to overwrite files in $(dist_dir), if they already exist. 
#     To preserve previous configurations, run `dist.upgrade` instead or
#     `cd $(dist_dir)` first to run `make upgrade`.
all: upgrade
upgrade: config dist.upgrade

# Test the docker images with docker-compose.
# See docker-compose.yaml
# NOTE: 
#   - The command rerun `make config` to overwrite files in $(dist_dir), if they already exist. 
#     To preserve previous configurations, run `dist.up` instead or
#     `cd $(dist_dir)` first to run `make up`.
up: config dist.up

# Generate the configuration file $(config_file) from the default if it does not exist
$(config_file):
	@if [ ! -f $(config_file) ]; then \
		echo "Generating the configuration file $(config_file) from the default..."; \
		cp default-config.yaml.j2 $(config_file); \
	else \
		echo "Using an existing $(config_file)."; \
	fi

# Render $(template_dir) to $(dist_dir) to configure equiz according to $(config_file).
config: $(config_file)
	@cd configurator-docker && make tag=$(tag)
	@mkdir -p $(dist_dir) && docker run --rm \
	  -u $$(stat -c '%u:%g' $(dist_dir)) \
	  -v $(template_dir):/template \
      -v $(dist_dir):/dist \
      -v $(CURDIR)/default-config.yaml.j2:/app/default-config.yaml.j2 \
      -v $(config_file):/app/config.yaml.j2 \
	  configurator:$(tag)

# Pass make commands to $(dist_dir) subfolder generated by `make config`.
# See the available commands in $(dist_dir)/Makefile, which include commands for
#   - building equiz images and test run them using docker-compose, and (TODO: link to setup instructions)
#   - deploying equiz to a kubernetes cluster. (TODO: link to setup instructions)
dist.%:
	@if [ -d $(dist_dir) ]; then \
		cd $(dist_dir) && make $*; \
	else \
		echo "Run `make config` to generate the distribution folder $(dist_dir) first." && exit 1; \
	fi

# To run additional setup scripts such as creating a test course/plan for jmeter load testing
sbin: dist.sbin


# Remove $(dist_dir) after passing the clean command to $(dist_dir) subfolder.
clean:
	@read -r -p "Are you sure you want to clean? [y/N] " confirm; \
	if [ "$$confirm" = "y" ]; then \
		echo "Cleaning..."; \
		if [ -d $(dist_dir) ]; then \
			cd $(dist_dir) && make clean && \
			cd .. && rm -rf $(dist_dir); \
		fi \
	fi


# Setup docker
docker: docker.all
docker.%:
	@cd node/docker && make $*

# Setup k8s
k8s: k8s.all
k8s.%:
	@cd node/k8s && make $*

# Setup certificate for tls
certificate: certificate.all
certificate.%:
	@cd "$(dist_dir)/certificate" && make $*

.PHONY: config clean all up upgrade node dist.% docker.% docker k8s.% k8s test certificate.% certificate