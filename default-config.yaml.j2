# A sample config file for production

# *** IMPORTANT ***
#
#   - For security reason, change the secrets to your own secrets before deployment.
#     Subsequent changes to the secret after deployment will not work because some persistent volumes 
#     were initialized only during the first deployment but not the subsequent upgrade.
#   - Do not push the config file or the distribution dir to a public repository.
#     By default, ./config*.yaml.j2 and ./dist* are git-ignored. See the .gitignore file. 
#   - Keep the YAML anchors such as &MYPASS to avoid inconsistent values.
#     E.g., phpfpminit app uses the same password MYPASS to access the mariadb app configured to use 
#      - MYSQL_PASSWORD as the password for the moodle user (database) and 
#      - MYSQL_ROOT_PASSWORD as the root password.
#     Similarly, keep the jinja2 rendering such as {{ host }} to ensure consistency. E.g., host is used
#     to set the WWWROOT for moodle as well as the ingress host path.
#
# NOTE:
#   - You may add additional variables for custom built docker images that recognize them.
#   - Be careful of name conflicts as the values here can be overriden by those set 
#     for any variables of the same name in other ways such as env in container spec.
secret:
  # Sensitive information passed to different apps as environment variables using 
  # envFrom of the container spec.
  # Template:
  #   { app name }:
  #     { variable name }: { string value }
  phpfpminit:
    ADMINPASS: &ADMINPASS 'Admin.1234'
    DBPASS: &DBPASS 'yourpassword'
    UPGRADEKEY: ''
  mariadb:
    MYSQL_ROOT_PASSWORD: *DBPASS
    MYSQL_PASSWORD: *DBPASS
  maxima:
    MAXIMAPOOL_ADMIN_PASSWORD: *ADMINPASS

{%- set email = '' %}                          # Support email address. A valid email needed for letsencrypt-*.
{%- set protocol = 'http' %}                   # 'http' or 'https' (TODO: link to setup instructions for self-signed or lets-encrypt cert for kubernetes. See acme and myca folders.)
{%- set host = 'localhost' %}                  # replace by the actual host name. (TODO: link to setup instructions for ingress in values.yaml file.)
{%- set port = '' %}                           # (TODO: test if other ports such as 8181 actually works, and add appropriate instructions.)
{%- set namespace = 'equiz' %}                 # Namespace for helm deployment of equiz to identify related resources.
{%- set release = 'default' %}                 # Release name for helm deployment to identify related resources for different releases in the same namespace. 
                                               # (TODO: Support multiple helm deployments to the same namespace by attaching .Release.Name to services like mariadb, phpfpm, maxima...)
{%- set route = '/'+namespace -%}              # Must must a valid path starting with '/' mapped to the external base URL.
{%- set registry ='localhost:32000' %}         # Used by docker to store custom built docker images for equiz so the kubernetes can pull from it. Default to the private registry accessible by kubernetes. (TODO: link to setup instructions that enable private registry.)
email: {{ email }}
namespace: {{ namespace }}
release: {{ release }}
host: {{ host }}
port: {{ port }}
route: {{ route }}
registry: {{ registry.rstrip('/') }}
certificate_issuer: {{ certificate_issuer }}

# Settings for installing/configuring moodle plugins. E.g., enable forcedcache by setting forcedcache = True, which
#   - renders $(dist_dir)/html/Dockerfile to download forcedcache plugin files,
#   - renders $(dist_dir)/phpfpm/sbin/setup_moodle.sh to setup forcedcache for the phpfpminit container, and
#   - enable subchart redis for caching.
{%- set forcedcache = True %}
{%- set coderunner = True %}
{%- set stack = True %}
plugins:
  # Named plugins recognized by equiz to initialize . (TODO: link to setup instructions for adding named plugins.)
  # Template:
  # ( plugin_name ):
  #   enabled: ( true or false: whether to enable the plugin. )
  #   (TODO: other configurations.)
  forcedcache:
    enabled: {{ "true" if forcedcache else "false" }}
  coderunner:
    enabled: {{ "true" if coderunner else "false" }}
  stack:
    enabled: {{ "true" if stack else "false" }}

# Extra commands to run right after installing moodle.
# For instance, with moosh preinstalled in the image, additional moodle plugins can be installed 
# using the command:
# su -s /bin/sh www-data -c "moosh plugin-list && moosh plugin-install -fd { plugin_name }"
#
# NOTE:
# - The commands will be run as root towards the end of the phpfpminit container.
#   Switch to www-data user to install moodle plugins.
# - For other moosh (moodle shell) commands, see
#   https://github.com/dive4dec/moosh.
postInstallCommand: |
  su -s /bin/sh www-data -c "moosh auth-manage enable lti"

# Information passed to different apps as environment variables using
# envFrom of the container spec.
env:
  phpfpminit:
    ADMINUSER: admin
    DBUSER: &DBUSER moodleuser
    ADMINEMAIL: ''
    SUPPORTEMAIL: ''
    WWWROOT: "{{ protocol }}://{{ host }}{% if port -%}:{{ port }}{%- endif %}{{ route }}"
    DATAROOT: '/var/www/moodledata'
    DBTYPE: mariadb
    DBHOST: mariadb
    DBNAME: &DBNAME moodle
    DBPORT: '3306'
    DBSOCKET: '/var/run/mysqld/mysqld.sock'
    SITEPRESET: ''
    PREFIX: 'mdl_'
    FULLNAME: 'E-Quiz'
    SHORTNAME: {{ namespace }}
    SUMMARY: 'E-Quiz for Programmable Online Exam.'
  mariadb:
    MYSQL_USER: *DBUSER
    MYSQL_DATABASE: *DBNAME
  goemaxima:
      # GOEMAXIMA_DEBUG activates some debug logs with GOEMAXIMA_DEBUG=1 (or more with GOEMAXIMA_DEBUG=2).
      GOEMAXIMA_EXTRA_PACKAGES: "/stackmaxima/extra/datamining.mac" # is a colon-separated list of maxima packages that gets loaded at startup at the server. The load time of the packages mostly influences the startup time of the server itself and should not significantly affect the serve time of a request. The entries simply get loaded through a load(entry) call in maxima. This means you can also mount your own maxima libraries into the docker image and load them by using a path.
      # GOEMAXIMA_NUSER sets the number of processes that can run at the same time. The maximum number is 32 and it is the default.
      # GOEMAXIMA_QUEUE_LEN sets the target number of processes that are idle and ready to accept a request. The default is 3 (but note that there is always one extra process waiting).
      # GOEMAXIMA_TEMP_DIR is the temporary directory where maxima processes write plots and have their named pipes. Its default is /tmp/maxima. It is the only location where the server writes to and should be mapped to tmpfs to increase speed.
      # GOEMAXIMA_LIB_PATH is the path to a library that is loaded on startup of the maxima process. If you do not modify the container or use the webserver executable in another context than the image, you probably want to leave this variable unset. If you want to load extra packages/libraries, use the GOEMAXIMA_EXTRA_PACKAGES variable instead.    

# Settings for subcharts
subcharts:
  # Settings for the web server for moodle
  nginx:
    image: 
      repository: nginx
      tag: 1.25-alpine3.17
    service:
      port: {{ port }}
    ingress:
      enabled: true 
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 200M
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts:
        - host: {{ host }}
          paths:
            - path: {{ route }}(/|$)(.*)
              pathType: Prefix

  # Settings for the php engine for moodle
  phpfpm:
    image: 
      repository: {{ registry }}/{{ namespace }}_phpfpm
      tag: latest

  # Settings for the database server for moodle
  mariadb:
    image: 
    repository: mariadb
    tag: 10.8.4

  # Settings for redis
  redis:
    enabled: {{ "true" if forcedcache else "false" }}
    image: 
      repository: redis
      tag: 7.0.11-alpine3.18

  # Settings for jobe
  jobe:
    enabled: {{ "true" if coderunner else "false" }}
    image: 
      repository: trampgeek/jobeinabox
      tag: latest

  # Settings for goemaxima
  goemaxima:
    enabled: {{ "true" if stack else "false" }}
    image:
      repository: mathinstitut/goemaxima
      tag: 2023102700-1.1.9

global:
  # To use existing PVCs
  existingPvc:
    html: ""
    moodledata: ""
    mysql: ""
  htmlImage: {{ registry }}/{{ namespace }}_html
  phpfpminitImage: {{ registry }}/{{ namespace }}_phpfpminit

# PVCs to be created by helm upgrade of equiz, if global.existingPvc is not specified.
pvc:
  html:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 1G
  moodledata:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 1G
  mysql:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 1G

# Configuration file contents
etc:
  mycnf: ""
  php: ""
  phpfpm: ""
  nginx: ""
  nginxSite: ""
  configphp: ""
  redisconf: ""
  forcedcachejson: ""