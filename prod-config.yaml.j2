# A sample config file for production

# *** IMPORTANT ***
#
#   - For security reason, change the secrets to your own secrets before deployment.
#     Subsequent changes to the secret after deployment will not work because some persistent volumes 
#     were initialized only during the first deployment but not the subsequent upgrade.
#   - Do not push the config file or the distribution dir to a public repository.
#     By default, ./config*.yaml.j2 and ./dist* are git-ignored. See the .gitignore file. 
#   - Keep the YAML anchors such as &MYPASS to avoid inconsistent values.
#     E.g., phpfpminit app uses the same password MYPASS to access the mariadb app configured to use 
#      - MYSQL_PASSWORD as the password for the moodle user (database) and 
#      - MYSQL_ROOT_PASSWORD and MYSQL_PWD as the root password.
#     Similarly, keep the jinja2 rendering such as {{ host }} to ensure consistency. E.g., host is used
#     to set the WWWROOT for moodle as well as the ingress host path.
#
# NOTE:
#   - You may add additional variables for custom built docker images that recognize them.
#   - Be careful of name conflicts as the values here can be overriden by those set 
#     for any variables of the same name in other ways such as env in container spec.
secret:
  # Sensitive information passed to different apps as environment variables using 
  # envFrom of the container spec.
  # Template:
  #   { app name }:
  #     { variable name }: { string value }
  phpfpminit:
    ADMINPASS: &ADMINPASS 'Admin.1234'
    DBPASS: &DBPASS 'yourpassword'
    UPGRADEKEY: ''
  mariadb:
    MYSQL_ROOT_PASSWORD: *DBPASS
    MYSQL_PASSWORD: *DBPASS
    MYSQL_PWD: *DBPASS
  maxima:
    MAXIMAPOOL_ADMIN_PASSWORD: *ADMINPASS

{%- set email = 'support@dive.cs.cuhk.edu.hk' %}  # Support email address. A valid email needed for letsencrypt-*.
{%- set protocol = 'https' %}                     # 'http' or 'https' (TODO: link to setup instructions for self-signed or lets-encrypt cert for kubernetes. See acme and myca folders.)
{%- set host = 'dive.cs.cityu.edu.hk' %}          # replace by the actual host name. (TODO: link to setup instructions for ingress in values.yaml file.)
{%- set port = '' %}                              # (TODO: test if other ports such as 8181 actually works, and add appropriate instructions.)
{%- set namespace = 'e-quiz' %}                    # Namespace for helm deployment of equiz to identify related resources.
{%- set release = 'default' %}                    # Release name for helm deployment to identify related resources for different releases in the same namespace. 
                                                  # (TODO: Support multiple helm deployments to the same namespace by attaching .Release.Name to services like mariadb, phpfpm, maxima...)
{%- set route = '/'+namespace -%}                 # Must must a valid path starting with '/' mapped to the external base URL.
{%- set registry ='localhost:32000' %}            # Used by docker to store custom built docker images for equiz so the kubernetes can pull from it. Default to the private registry accessible by kubernetes. (TODO: link to setup instructions that enable private registry.)
email: {{ email }}
namespace: {{ namespace }}
release: {{ release }}
host: {{ host }}
port: {{ port }}
route: {{ route }}
registry: {{ registry.rstrip('/') }}
certificate_issuer: {{ certificate_issuer }}

# Settings for installing/configuring moodle plugins. E.g., enable forcedcache by setting forcedcache = True, which
#   - renders $(dist_dir)/html/Dockerfile to download forcedcache plugin files,
#   - renders $(dist_dir)/phpfpm/sbin/setup_moodle.sh to setup forcedcache for the phpfpminit container, and
#   - enable subchart redis for caching.
{%- set forcedcache = True %}
{%- set coderunner = True %}
{%- set stack = True %}
plugins:
  # Named plugins recognized by equiz to initialize . (TODO: link to setup instructions for adding named plugins.)
  # Template:
  # ( plugin_name ):
  #   enabled: ( true or false: whether to enable the plugin. )
  #   (TODO: other configurations.)
  forcedcache:
    enabled: {{ "true" if forcedcache else "false" }}
  coderunner:
    enabled: {{ "true" if coderunner else "false" }}
  stack:
    enabled: {{ "true" if stack else "false" }}

# Extra commands to run right after installing moodle.
# For instance, with moosh preinstalled in the image, additional moodle plugins can be installed 
# using the command:
# su -s /bin/sh www-data -c "moosh plugin-list && moosh plugin-install -fd { plugin_name }"
#
# NOTE:
# - The commands will be run as root towards the end of the phpfpminit container.
#   Switch to www-data user to install moodle plugins.
# - For other moosh (moodle shell) commands, see
#   https://github.com/dive4dec/moosh.
postInstallCommand: |
  su -s /bin/sh www-data -c "moosh auth-manage enable lti"

# Information passed to different apps as environment variables using
# envFrom of the container spec.
env:
  phpfpminit:
    ADMINUSER: admin
    DBUSER: &DBUSER moodleuser
    ADMINEMAIL: ''
    SUPPORTEMAIL: ''
    WWWROOT: "{{ protocol }}://{{ host }}{% if port -%}:{{ port }}{%- endif %}{{ route }}"
    DATAROOT: '/var/www/moodledata'
    DBTYPE: mariadb
    DBHOST: mariadb
    DBNAME: &DBNAME moodle
    DBPORT: '3306'
    DBSOCKET: '/var/run/mysqld/mysqld.sock'
    SITEPRESET: ''
    PREFIX: 'mdl_'
    FULLNAME: 'E-Quiz'
    SHORTNAME: {{ namespace }}
    SUMMARY: 'E-Quiz for Programmable Online Exam.'
  mariadb:
    MYSQL_USER: *DBUSER
    MYSQL_DATABASE: *DBNAME
  goemaxima:
      # GOEMAXIMA_DEBUG activates some debug logs with GOEMAXIMA_DEBUG=1 (or more with GOEMAXIMA_DEBUG=2).
      GOEMAXIMA_EXTRA_PACKAGES: "/stackmaxima/extra/datamining.mac" # is a colon-separated list of maxima packages that gets loaded at startup at the server. The load time of the packages mostly influences the startup time of the server itself and should not significantly affect the serve time of a request. The entries simply get loaded through a load(entry) call in maxima. This means you can also mount your own maxima libraries into the docker image and load them by using a path.
      # GOEMAXIMA_NUSER sets the number of processes that can run at the same time. The maximum number is 32 and it is the default.
      # GOEMAXIMA_QUEUE_LEN sets the target number of processes that are idle and ready to accept a request. The default is 3 (but note that there is always one extra process waiting).
      # GOEMAXIMA_TEMP_DIR is the temporary directory where maxima processes write plots and have their named pipes. Its default is /tmp/maxima. It is the only location where the server writes to and should be mapped to tmpfs to increase speed.
      # GOEMAXIMA_LIB_PATH is the path to a library that is loaded on startup of the maxima process. If you do not modify the container or use the webserver executable in another context than the image, you probably want to leave this variable unset. If you want to load extra packages/libraries, use the GOEMAXIMA_EXTRA_PACKAGES variable instead.    

# Settings for subcharts
subcharts:
  # Settings for the web server for moodle
  nginx:
    image: 
      repository: nginx
      tag: 1.27-alpine3.21
    service:
      port: 80
    ingress:
      enabled: true 
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 200M
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts:
        - host: {{ host }}
          paths:
            - path: {{ route }}(/|$)(.*)
              pathType: Prefix
    resources:
      limits:
        cpu: 8
        memory: 8Gi
      requests:
        cpu: 1
        memory: 2Gi

  # Settings for the php engine for moodle
  phpfpm:
    image: 
      repository: {{ registry }}/{{ namespace }}_phpfpm
      tag: latest
      pullPolicy: Always
    resources:
      limits:
        cpu: 16
        memory: 16Gi
      requests:
        cpu: 1
        memory: 2Gi

  # Settings for the database server for moodle
  mariadb:
    image: 
      repository: mariadb
      tag: 11.8.2


  # Settings for redis
  redis:
    enabled: {{ "true" if forcedcache else "false" }}
    image:
      repository: redis
      tag: 8.0.2-alpine3.21
    resources:
      limits:
        cpu: 8
        memory: 16Gi
      requests:
        cpu: 1
        memory: 2Gi

  # Settings for jobe
  jobe:
    enabled: {{ "true" if coderunner else "false" }}
    image:
      repository: trampgeek/jobeinabox
      imagePullPolicy: Always
      tag: latest
    resources:
      limits:
        cpu: 16
        memory: 16Gi
      requests:
        cpu: 1
        memory: 1Gi

  # Settings for goemaxima
  goemaxima:
    enabled: {{ "true" if stack else "false" }}
    image:
      repository: mathinstitut/goemaxima
      tag: 2025040100-1.2.0
    resources:
      limits:
        cpu: 8
        memory: 8Gi
      requests:
        cpu: 1
        memory: 1Gi

global:
  # To use existing PVCs
  existingPvc:
    html: ""
    moodledata: ""
    mysql: ""
  htmlImage: {{ registry }}/{{ namespace }}_html
  phpfpminitImage: {{ registry }}/{{ namespace }}_phpfpminit

# PVCs to be created by helm upgrade of equiz, if global.existingPvc is not specified.
pvc:
  html:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 4G
  moodledata:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 10G
  mysql:
    storageClassName: microk8s-hostpath
    accessMode: ReadWriteOnce
    size: 10G

# Configuration file contents
etc:
  mycnf: |-
    # The MariaDB configuration file
    # See https://docs.moodle.org/402/en/MySQL
    #
    # The MariaDB/MySQL tools read configuration files in the following order:
    # 0. "/etc/mysql/my.cnf" symlinks to this file, reason why all the rest is read.
    # 1. "/etc/mysql/mariadb.cnf" (this file) to set global defaults,
    # 2. "/etc/mysql/conf.d/*.cnf" to set global options.
    # 3. "/etc/mysql/mariadb.conf.d/*.cnf" to set MariaDB-only options.
    # 4. "~/.my.cnf" to set user-specific options.
    #
    # If the same option is defined multiple times, the last one will apply.
    #
    # One can use all long options that the program supports.
    # Run program with --help to get a list of available options and with
    # --print-defaults to see which it would actually understand and use.
    #
    # If you are new to MariaDB, check out https://mariadb.com/kb/en/basic-mariadb-articles/

    [client]
    default-character-set = utf8mb4

    [mysqld]
    innodb_file_per_table = 1
    innodb_buffer_pool_size = 4G
    key_buffer_size = 10M
    max_connections=500
    # max_allowed_packet=128M
    # slow_query_log = 1
    # slow_query_log_file = /var/log/mysql/mariadb-slow.log
    # long_query_time = 2


    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    skip-character-set-client-handshake

    [mysql]
    default-character-set = utf8mb4

    # This group is read both by the client and the server
    # use it for options that affect everything
    #
    [client-server]
    # Port or socket location where to connect
    # port = 3306
    socket = /run/mysqld/mysqld.sock

    # Import all .cnf files from configuration directory
    !includedir /etc/mysql/conf.d/
    !includedir /etc/mysql/mariadb.conf.d/
  php: |-
    memory_limit = 1G
    session.save_handler = files
    file_uploads = On
    session.auto_start = Off
    max_execution_time = 600
    date.timezone = Asia/Hong_Kong
    upload_max_filesize = 128M
    post_max_size = 128M
    max_input_vars = 5000
    display_errors = off  
  phpfpm: |-
    [global]
    error_log = /usr/local/var/log/php-fpm.log

    [www]
    slowlog = /usr/local/var/log/slow.log
    request_slowlog_timeout = 3s    
    user = www-data
    group = www-data
    listen = 9000
    listen.owner = www-data
    listen.group = www-data
    listen.mode = 0660
    pm = static
    security.limit_extensions = .php
    pm.max_children = 1000  ; php-fpm children process for moodle uses 50M~100M
    pm.max_requests = 1000
    catch_workers_output = yes

  nginx: |-
    worker_processes auto;
    pid /run/nginx.pid;
    include /etc/nginx/modules-enabled/*.conf;

    events {
      worker_connections 1000; 
    }

    http {

      ##
      # Basic Settings
      ##
      sendfile on;
      tcp_nopush on;
      types_hash_max_size 2048;
      # server_tokens off;

      client_max_body_size 200m;

      # server_names_hash_bucket_size 64;
      # server_name_in_redirect off;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # SSL Settings
      ##

      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
      ssl_prefer_server_ciphers on;

      ##
      # Logging Settings
      ##

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log;

      ##
      # Gzip Settings
      ##

      gzip on;

      # gzip_vary on;
      # gzip_proxied any;
      # gzip_comp_level 6;
      # gzip_buffers 16 8k;
      # gzip_http_version 1.1;
      # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;
    }

  nginxSite: |-
    server {
        keepalive_timeout 300;
        keepalive_requests 100000;
        listen 80;
        server_name localhost;
        root /var/www/html;
        error_page 404 /error/index.php;
        error_page 403 =404 /error/index.php;

        location / {
            index index.php;
            try_files $uri $uri/ /index.php?$query_string =404;
        }

        location ~ [^/]\.php(/|$) {
            fastcgi_split_path_info  ^(.+\.php)(/.+)$;
            fastcgi_index            index.php;
            fastcgi_pass             phpfpm:9000;
            include                  fastcgi_params;
            ## See https://trac.nginx.org/nginx/ticket/321
            try_files $fastcgi_script_name =404;
            set $path_info $fastcgi_path_info;
            fastcgi_param PATH_INFO $path_info;
            fastcgi_param MOD_X_ACCEL_REDIRECT_ENABLED on;
            # fastcgi_param   PATH_INFO       $fastcgi_path_info;
            ##
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        location /dataroot/ {
            # internal;
            alias /var/www/moodledata/; # ends with /
        }

        location /cachedir/ {
            internal;
            alias /var/www/moodledata/cache/; # ends with /
        }

        location /localcachedir/ {
            internal;
            alias /var/www/moodledata/localdircache/; # ends with /
        }

        location /tempdir/ {
            internal;
            alias /var/www/moodledata/temp/; # ends with /
        }

        location /filedir/ {
            internal;
            alias /var/www/moodledata/filedir/; # ends with /
        }

        # Hide all dot files but allow "Well-Known URIs" as per RFC 5785
        location ~ /\.(?!well-known).* {
            return 404;
        }
        
        # This should be after the php fpm rule and very close to the last nginx ruleset.
        # Don't allow direct access to various internal files. See MDL-69333
        location ~ (/vendor/|/node_modules/|composer\.json|/readme|/README|readme\.txt|/upgrade\.txt|db/install\.xml|/fixtures/|/behat/|phpunit\.xml|\.lock|environment\.xml) {
            deny all;
            return 404;
        }

    }
  configphp: ""
  redisconf: ""
  forcedcachejson: ""